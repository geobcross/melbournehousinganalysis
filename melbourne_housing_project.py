# -*- coding: utf-8 -*-
"""Melbourne_Housing_PROJECT.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tlHpjCMfHO9_qVef46toXbhjhqODMN52
"""

import pandas as pd
import sympy as sy
import matplotlib.pyplot as plt
import numpy as np

"""Below I answer the following questions 
 - In which suburb were the most homes sold in 
     - 2016
     - 2017
 - What is the average house price in the suburb most homes were sold
 - What was the percentage increase in that suburb from 2016 to 2017 
 - Which companies made the greatest number of sales in 
    - 2016
    - 2017
 - Which months saw the most number of sales 
 - Where was the most expensive house sold? 
 - Which suburb had the highest average sale price?
"""

housing = pd.read_csv('Melbourne_housing_FULL.csv')

housing.head()

"""In which suburb were the most homes sold?"""

housing['Suburb'].value_counts().head()

"""It occured to me that this data ran over a few years so I wanted to find out if the suburb was the same each year"""

import datetime 
housing['year'] = pd.DatetimeIndex(housing['Date']).year
housing.groupby('year')['year'].count()

"""After seeing this I went back to look at the data and it seems 2018 data only goes through till Feb and is an incolplete year so I decided not to include that particular data in my comparison """

housing.drop(housing.loc[housing['year']==2018].index, inplace=True)

import datetime 
housing['year'] = pd.DatetimeIndex(housing['Date']).year
housing.groupby('year')['year'].count()

"""OK So now we are just dealing with the sales in 2016 and 2017 as they are more complete sets. """

twentysixteen = housing[housing['year']==2016]
twentyseventeen = housing[housing['year']==2017]

twentysixteen.head()

twentyseventeen.head()

twentysixteen['Suburb'].value_counts().head()

twentyseventeen['Suburb'].value_counts().head()

"""Reservoir had the most sales both years. It made me wonder what the average house price was in Reservoir?"""

Reservoir1 = twentyseventeen[twentyseventeen['Suburb']=='Reservoir']
Reservoir2 = twentysixteen[twentysixteen['Suburb']=='Reservoir']

import statistics as st

Reservoir1

Reservoir2['Price'].mean()

Reservoir1['Price'].mean()

"""These numbers surprised me as the average housing price had increased so significantly in 1 year. What was the percentage in this increase?"""

increase = Reservoir1['Price'].mean() - Reservoir2['Price'].mean()

percentage = increase / Reservoir2['Price'].mean()

percentage * 100

"""If you purchased an investment property in Resevoir this is music to you ears!

Which company made the most sales in 2016 and 2017?
"""

twentysixteen['SellerG'].value_counts().head()

twentyseventeen['SellerG'].value_counts().head()

twentysixteen['SellerG'].value_counts().head(10).plot(kind ='bar')

twentyseventeen['SellerG'].value_counts().head(10).plot(kind ='bar')

"""I have prefered working with the years sepeartely at this point but wondered if there was a particular time of year more slaes were made. So I set out to find out which month had the most sales?"""

housing['month'] = pd.DatetimeIndex(housing['Date']).month
housing.groupby('month')['month'].count()

housing.groupby('month')['month'].count().plot(kind = 'bar')

"""I expected our summer months to have the most sales but it looks like Spring is the more common sales month.

My interest changed to Price and where the most expensive houses were
"""

housing.sort_values(by = ['Price']).head()

expensive = housing.nlargest(100,'Price')

expensive

"""So first I found the top 100 priced homes and then based on this counted what number of those were assigned to each suburb. These top 13 were the most ocuring in that list """

expensive['Suburb'].value_counts().head(13)

"""Brighton has a fair majority of most expensive homes, but it is the most expensive suburb? Now that I had some idea of where the most expensive homes were I wanted to figure of the average prices in these areas and compare them"""

Brighton = housing[housing['Suburb']=="Brighton"]
Toorak = housing[housing['Suburb']=="Toorak"]
Kew = housing[housing['Suburb']=="Kew"]
Malvern = housing[housing['Suburb']=='Malvern']
Canterbury = housing[housing['Suburb']=='Canterbury']
Hawthorne = housing[housing['Suburb']=='Hawthorne']
Armadale = housing[housing['Suburb']=='Armadale']

Brighton['Price'].mean()

Toorak['Price'].mean()

Kew['Price'].mean()

Malvern['Price'].mean()

Canterbury['Price'].mean()

Hawthorne['Price'].mean()

Armadale['Price'].mean()

"""So despite Brighton having the most amount of expensive houses in the top 100 Cantebury actually had a lot higher average sale cost.

Does size matter?
"""

housing.plot(x = 'Landsize', y= 'Price' ,kind='scatter')

"""At first glance it would appear that size does not seem to have that much of a role in pricing... but let's look closer and move away from our outliers and concentrate on the data squished together on the left"""

housing2 = housing[housing['Landsize']<2500]

housing2.plot(x = 'Landsize', y= 'Price' ,kind='scatter')

"""So this is a little more interesting but i want to look even closer"""

housing3 = housing[housing['Landsize']<750]

housing3.plot(x = 'Landsize', y= 'Price' ,kind='scatter')

"""Hmm I wonder which suburb that outlier is in?"""

housing3.nlargest(1,'Price')

"""9 million dollars for a 744 square meter home in Mulgrave?

![]https://i3.au.reastatic.net/800x600/4f5fc785cf618b31a3a767ffd8e1e0721dd11d7fa5472f43b13f6a86cbae4f4f/main.jpg

I googled the address, turns out this was a typo in the data
"""

housing4 = housing[housing['Landsize']<450]

housing4.plot(x = 'Landsize', y= 'Price' ,kind='scatter')

